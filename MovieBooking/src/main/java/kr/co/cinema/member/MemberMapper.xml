<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.co.cinema.member.MemberMapper">
	
	<!-- 비회원 예매 확인 -->
	<select id="selectNonMemberReserve" parameterType="String" resultType="kr.co.cinema.dto.MypageMemberReserve">
		SELECT
			SCREEN_SCHEDULE.scs_date AS scsDate,
			MOVIE.mov_korName AS movKorName,
			PAYMENT.pmt_code AS pmtCode,
			PAYMENT.pmt_date AS pmtDate,
			BRANCH.brc_name AS brcName
		FROM
			SCREEN_SCHEDULE
		JOIN
			PAYMENT
		ON
			SCREEN_SCHEDULE.scs_code = PAYMENT.scs_code
		JOIN
			MOVIE
		ON
			SCREEN_SCHEDULE.mov_code=MOVIE.mov_code
		JOIN
			BRANCH
		ON
			BRANCH.brc_code = SCREEN_SCHEDULE.brc_code
		WHERE
			PAYMENT.nmem_code=(SELECT
										nmem_code AS nmemCode
									FROM
										NON_MEMBER
									WHERE
										nmem_phone=#{nmemPhone}
									AND
										nmem_name=#{nmemName}
									AND
										nmem_birth=#{nmemBirth}
									AND
										nmem_pw=#{nmemPw}
									AND
										pmt_status='결제완료')	
	</select>
	
	<!-- 회원탈퇴 처리 -->
	<select id="updateMemberDelete" parameterType="kr.co.cinema.dto.Member">
		update 
			MEMBER 
		set 
			mem_pw='0',
			mem_phone='0',
			mem_name='0',
			mem_gender='0',
			mem_postNo='0',
			mem_addr='0',
			mem_mail='0',
			mem_mileage='0',  
			mem_status='탈퇴',
			mem_leaveDay=now() 
		where 
			mem_id=#{memId};	
	</select>
	
	<!-- 회원 탈퇴 비밀번호 중복 체크 -->
	<select id="selectMemberOverLapDelete" parameterType="String" resultType="String">
		select 
			mem_pw AS memPw
		from 
			MEMBER 
		where 
			mem_id=#{memId}
	</select>
	
	<!-- 마이페이지 회원의 예매 가져오기 select -->
	<select id="selectPayment" parameterType="String" resultType="kr.co.cinema.dto.MypageMemberReserve">
		SELECT
			SCREEN_SCHEDULE.scs_date AS scsDate,
			PAYMENT.pmt_code AS pmtCode,
			MOVIE.mov_korName AS movKorName,
			BRANCH.brc_name AS brcName,
			PAYMENT.pmt_date AS pmtDate
		FROM
			PAYMENT
		JOIN
			SCREEN_SCHEDULE
		ON
			PAYMENT.scs_code = SCREEN_SCHEDULE.scs_code
		JOIN
			MOVIE
		ON
			MOVIE.mov_code = SCREEN_SCHEDULE.mov_code		
		JOIN
			BRANCH
		ON
			BRANCH.brc_code = SCREEN_SCHEDULE.brc_code		
		WHERE
			PAYMENT.mem_id=#{memId}
		AND
			pmt_status='결제완료'
	</select>
	
	<!-- 마이페이지 회원의 마일리지 가져오기 select-->
	<select id="selectMemberMileage" parameterType="String"	resultType="kr.co.cinema.dto.Mileage">
		select 
			mil_use AS milUse,
			mil_save AS milSave,
			mil_date AS milDate
		from 
			MILEAGE 
		where 
			mem_id=#{memId}
	</select>
	
	<!-- 마이페이지 회원 개인정보 수정하기 -->
	<update id="modifyMemberUpdate" parameterType="kr.co.cinema.dto.Member" >
		update 
			MEMBER 
		set 
			mem_pw=#{memPw},
			mem_phone=#{memPhone},
			mem_name=#{memName},
			mem_gender=#{memGender},
			mem_birth=#{memBirth},
			mem_postNo=#{memPostNo},
			mem_addr=#{memAddr},
			mem_mail=#{memMail}  
		where 
			mem_id=#{memId}
	</update>
	
	<!-- 한 회원 개인정보 가져오기 select -->
	<select id="selectOneMemberModify" parameterType="String" resultType="kr.co.cinema.dto.Member">
		select 
			mem_id AS memId,
			mem_pw AS memPw,
			mem_phone AS memPhone,
			mem_name AS memName,
			mem_gender AS memGender,
			mem_birth AS memBirth,
			mem_postNo AS memPostNo,
			mem_addr AS memAddr,
			mem_mail AS memMail
		from 
			MEMBER 
		where 
			mem_id=#{memId}
	</select>
	<!-- 한 회원 개인정보 가져오기  -->

	<!-- 비회원 가입 insert 시작 -->
	<insert id="insertNonMember" parameterType="kr.co.cinema.dto.NonMember">
		insert into NON_MEMBER(
			nmem_code,
			nmem_phone,
			nmem_name,
			nmem_birth,
			nmem_pw)
		values(
			#{nmemCode},
			#{nmemPhone},
			#{nmemName},
			#{nmemBirth},
			#{nmemPw})	
	</insert>
	<!-- 비회원 가입 insert 종료 -->

	<!-- 회원가입 중복확인 select 시작 -->
	<select id="selectMemeberOverlap" parameterType="String" resultType="String">
		select 
			mem_id AS memId
		from 
			MEMBER 
		where 
			mem_id=#{memId}
	</select>
	<!-- 회원가입 중복확인 select 종료 -->

	<!-- 회원 로그인 select 시작 -->
	<select id="selectMemberLogin" parameterType="Map" resultType="Map">
		select
			mem_id AS memId,
			mem_pw AS memPw,
			mem_name AS memName,
			mem_phone AS memPhone,
			mem_mileage AS memMileage,
			mem_joinDay AS memJoinDay,
			mem_status AS memStatus
		from 
			MEMBER
		where 
			mem_id=#{memId}
		and 
			mem_pw=#{memPw}
		and
			mem_status='일반'
	</select>
	<!-- 회원 로그인 select 종료 -->

	<!-- 회원 가입 insert 시작 -->
	<insert id="insertMember" parameterType="kr.co.cinema.dto.Member">
		insert into MEMBER(
			mem_id,		
			mem_pw,
			mem_phone,
			mem_name,
			mem_gender,
			mem_birth,
			mem_postNo,
			mem_addr,
			mem_mail,
			mem_mileage,
			mem_joinDay,
			mem_status
		)values (
			#{memId},
			#{memPw},
			#{memPhone},
			#{memName},
			#{memGender},
			#{memBirth},
			#{memPostNo},
			#{memAddr},
			#{memMail},
			0,
			now(),
			'일반')
	</insert>
	<!-- 회원 가입 insert 종료 -->
	
	<!-- 회원 비밀번호 찾기 select 시작 -->
	<select id="selectOnePwFindMember" parameterType="kr.co.cinema.dto.Member" resultType="String">
		select
			mem_pw AS memPw
		from 
			MEMBER 
		where	
			mem_id=#{memId} and
			mem_name=#{memName} and
			mem_phone=#{memPhone} 	
	</select>
	<!-- 회원 비밀번호 찾기 select 종료 -->
	
	<!-- 회원 아이디 찾기 select 시작 -->
	<select id="selectOneIdFindMember" parameterType="kr.co.cinema.dto.Member" resultType="String">
		select
			mem_id AS memId 
		from 
			MEMBER 
		where 
			mem_name=#{memName} and 
			mem_birth=#{memBirth} and
			mem_phone=#{memPhone}
	</select>
	<!-- 회원 아이디 찾기 select 종료 -->
	
</mapper>